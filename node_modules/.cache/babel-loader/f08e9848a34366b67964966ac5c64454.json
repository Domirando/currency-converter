{"ast":null,"code":"import { actionTypes } from \"../action-types\";\nimport axios from \"axios\";\nexport const ConvertMoney = (amount, from, to) => {\n  return {\n    type: actionTypes.CONVERT,\n    payload: {\n      request_amount: amount,\n      from: from,\n      to: to,\n      response_amount: 0\n    }\n  };\n}; // @ts-ignore\n\n_c = ConvertMoney;\nexport const fetchData = (amount, req_from, to) => {\n  const API_KEY = 'FWcJsFtVZIgaioJaaTsmxsiGH2i53NOvy5boCoNc';\n  const API_KEY_CONVERTER = 'c559a98ce0-4a8821046c-rdgxzw';\n  return async dispatch => {\n    try {\n      dispatch({\n        type: actionTypes.FETCH_WEATHER_REQUEST\n      });\n      let response;\n\n      if (amount && req_from && to) {\n        response = await axios.get(`https://api.fastforex.io/fetch-one?from=${req_from}&to=${to}&api_key=${API_KEY_CONVERTER}`);\n        let item = Object.entries(response).map(item => item); // @ts-ignore\n\n        let base = item[0][1].base; // @ts-ignore\n\n        let item2 = Object.entries(item[0][1].result).map(item => item);\n        let value = item2[0][1];\n        let base_to = item2[0][0];\n        let res = amount * value;\n        dispatch({\n          type: actionTypes.FETCH_WEATHER_SUCCESS,\n          payload: {\n            from: base_to,\n            to: base_to,\n            converterResult: res\n          }\n        });\n      } else {\n        response = await axios.get(`https://api.currencyapi.com/v3/latest?apikey=${API_KEY}`);\n        console.log(\"response:\", response.data);\n        let items = Object.entries(response.data.data).map(item => item);\n        let items2 = items.map(item => item[1]); // @ts-ignore\n\n        let to = items2.map(item => item.code); // @ts-ignore\n\n        let amount = items2.map(item => item.value);\n        console.log(\"amount\", amount);\n        dispatch({\n          type: actionTypes.FETCH_WEATHER_SUCCESS,\n          payload: {\n            from: 'usd',\n            to: to,\n            response_amount: amount\n          }\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: actionTypes.FETCH_WEATHER_FAILURE,\n        payload: \"ooops, something went wrong!\"\n      });\n    }\n  };\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ConvertMoney\");","map":{"version":3,"names":["actionTypes","axios","ConvertMoney","amount","from","to","type","CONVERT","payload","request_amount","response_amount","fetchData","req_from","API_KEY","API_KEY_CONVERTER","dispatch","FETCH_WEATHER_REQUEST","response","get","item","Object","entries","map","base","item2","result","value","base_to","res","FETCH_WEATHER_SUCCESS","converterResult","console","log","data","items","items2","code","error","FETCH_WEATHER_FAILURE"],"sources":["/home/domirando/Projects/job-tasks/currency-converter/src/state/action-creators/index.ts"],"sourcesContent":["import {actionTypes} from \"../action-types\";\nimport axios from \"axios\";\nimport {Actions} from \"../actions\";\nimport {Dispatch} from \"react\";\n\nexport const ConvertMoney = (amount: number, from: string, to: string) => {\n    return {\n        type: actionTypes.CONVERT,\n        payload: {\n            request_amount: amount,\n            from: from,\n            to: to,\n            response_amount: 0,\n        }\n    }\n}\n\n// @ts-ignore\nexport const fetchData = (amount?: number, req_from?: string, to?: string) => {\n    const API_KEY = 'FWcJsFtVZIgaioJaaTsmxsiGH2i53NOvy5boCoNc'\n    const API_KEY_CONVERTER = 'c559a98ce0-4a8821046c-rdgxzw'\n    return async (dispatch: Dispatch<Actions>) => {\n        try {\n            dispatch({type: actionTypes.FETCH_WEATHER_REQUEST})\n            let response: any;\n            if (amount && req_from && to) {\n                response = await axios.get(`https://api.fastforex.io/fetch-one?from=${req_from}&to=${to}&api_key=${API_KEY_CONVERTER}`)\n                let item = Object.entries(response).map(item => item)\n                // @ts-ignore\n                let base = item[0][1].base\n                // @ts-ignore\n                let item2 = Object.entries(item[0][1].result).map(item => item)\n                let value: any = item2[0][1]\n                let base_to = item2[0][0]\n                let res = amount * value\n                dispatch({type: actionTypes.FETCH_WEATHER_SUCCESS, payload: {\n                        from: base_to,\n                        to: base_to,\n                        converterResult: res\n                    }})\n            }else {\n                response = await axios.get(`https://api.currencyapi.com/v3/latest?apikey=${API_KEY}`)\n                console.log(\"response:\", response.data)\n                let items = Object.entries(response.data.data).map(item => item)\n                let items2 = items.map(item => item[1])\n                // @ts-ignore\n                let to = items2.map(item => item.code)\n                // @ts-ignore\n                let amount = items2.map(item => item.value)\n                console.log(\"amount\", amount)\n                dispatch({type: actionTypes.FETCH_WEATHER_SUCCESS, payload: {\n                        from: 'usd',\n                        to: to,\n                        response_amount: amount\n                    }})\n            }\n        } catch (error) {\n            dispatch({type: actionTypes.FETCH_WEATHER_FAILURE, payload: \"ooops, something went wrong!\"})\n        }\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}