{"ast":null,"code":"import { actionTypes } from \"../action-types\";\nimport axios from \"axios\";\nexport const ConvertMoney = (amount, from, to) => {\n  return dispatch => {\n    dispatch({\n      type: actionTypes.CONVERT,\n      payload: {\n        request_amount: amount,\n        from: from,\n        to: to,\n        response_amount: 0\n      }\n    });\n  };\n};\n_c = ConvertMoney;\nexport const fetchWeatherRequest = () => ({\n  type: actionTypes.FETCH_WEATHER_REQUEST\n});\nexport const fetchWeatherSuccess = info => ({\n  type: actionTypes.FETCH_WEATHER_SUCCESS,\n  payload: info\n});\nexport const fetchWeatherFailure = error => ({\n  type: actionTypes.FETCH_WEATHER_FAILURE,\n  payload: error\n});\nexport const fetchData = () => {\n  return function (dispatch) {\n    dispatch(fetchWeatherRequest);\n    axios.get(`https://data.fixer.io/api/latest?access_key`).then(res => {\n      const info = res.data;\n      dispatch(fetchWeatherSuccess(info));\n    }).catch(error => {\n      dispatch(fetchWeatherFailure(error.message));\n    });\n  };\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ConvertMoney\");","map":{"version":3,"names":["actionTypes","axios","ConvertMoney","amount","from","to","dispatch","type","CONVERT","payload","request_amount","response_amount","fetchWeatherRequest","FETCH_WEATHER_REQUEST","fetchWeatherSuccess","info","FETCH_WEATHER_SUCCESS","fetchWeatherFailure","error","FETCH_WEATHER_FAILURE","fetchData","get","then","res","data","catch","message"],"sources":["/home/domirando/Projects/job-tasks/drewl-task/src/state/action-creators/index.ts"],"sourcesContent":["import {actionTypes} from \"../action-types\";\nimport {Actions} from \"../actions\";\nimport {Dispatch} from \"redux\";\nimport axios from \"axios\";\n\nexport const ConvertMoney = (amount: number, from: string, to: string) => {\n    return (dispatch: Dispatch<Actions>) => {\n        dispatch({\n            type: actionTypes.CONVERT,\n            payload: {\n                request_amount: amount,\n                from: from,\n                to: to,\n                response_amount: 0,\n            }\n        })\n    }\n}\n\n\nexport const fetchWeatherRequest = () => ({\n    type: actionTypes.FETCH_WEATHER_REQUEST\n})\nexport const fetchWeatherSuccess = (info: string) => ({\n    type: actionTypes.FETCH_WEATHER_SUCCESS,\n    payload: info\n})\n\nexport const fetchWeatherFailure = (error: string) => ({\n    type: actionTypes.FETCH_WEATHER_FAILURE,\n    payload: error\n})\nexport const fetchData = () => {\n    return function(dispatch: any) {\n        dispatch(fetchWeatherRequest)\n        axios.get(`https://data.fixer.io/api/latest?access_key`)\n            .then(res => {\n                const info = res.data\n                dispatch(fetchWeatherSuccess(info))\n            }).catch(error => {\n            dispatch(fetchWeatherFailure(error.message))\n        })\n    }\n}\n"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,iBAA1B;AAGA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,MAAD,EAAiBC,IAAjB,EAA+BC,EAA/B,KAA8C;EACtE,OAAQC,QAAD,IAAiC;IACpCA,QAAQ,CAAC;MACLC,IAAI,EAAEP,WAAW,CAACQ,OADb;MAELC,OAAO,EAAE;QACLC,cAAc,EAAEP,MADX;QAELC,IAAI,EAAEA,IAFD;QAGLC,EAAE,EAAEA,EAHC;QAILM,eAAe,EAAE;MAJZ;IAFJ,CAAD,CAAR;EASH,CAVD;AAWH,CAZM;KAAMT,Y;AAeb,OAAO,MAAMU,mBAAmB,GAAG,OAAO;EACtCL,IAAI,EAAEP,WAAW,CAACa;AADoB,CAAP,CAA5B;AAGP,OAAO,MAAMC,mBAAmB,GAAIC,IAAD,KAAmB;EAClDR,IAAI,EAAEP,WAAW,CAACgB,qBADgC;EAElDP,OAAO,EAAEM;AAFyC,CAAnB,CAA5B;AAKP,OAAO,MAAME,mBAAmB,GAAIC,KAAD,KAAoB;EACnDX,IAAI,EAAEP,WAAW,CAACmB,qBADiC;EAEnDV,OAAO,EAAES;AAF0C,CAApB,CAA5B;AAIP,OAAO,MAAME,SAAS,GAAG,MAAM;EAC3B,OAAO,UAASd,QAAT,EAAwB;IAC3BA,QAAQ,CAACM,mBAAD,CAAR;IACAX,KAAK,CAACoB,GAAN,CAAW,6CAAX,EACKC,IADL,CACUC,GAAG,IAAI;MACT,MAAMR,IAAI,GAAGQ,GAAG,CAACC,IAAjB;MACAlB,QAAQ,CAACQ,mBAAmB,CAACC,IAAD,CAApB,CAAR;IACH,CAJL,EAIOU,KAJP,CAIaP,KAAK,IAAI;MAClBZ,QAAQ,CAACW,mBAAmB,CAACC,KAAK,CAACQ,OAAP,CAApB,CAAR;IACH,CAND;EAOH,CATD;AAUH,CAXM"},"metadata":{},"sourceType":"module"}