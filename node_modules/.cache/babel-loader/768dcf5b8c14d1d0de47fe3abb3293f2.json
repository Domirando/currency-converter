{"ast":null,"code":"import { actionTypes } from \"../action-types\";\nexport let InitialState = {\n  request_amount: 0,\n  from: \"rub\",\n  to: \"usd\",\n  response_amount: 0,\n  error: \"\",\n  loading: false\n};\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : InitialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.CONVERT:\n      return {\n        request_amount: action.payload.request_amount,\n        to: action.payload.to,\n        from: action.payload.from,\n        response_amount: action.payload.response_amount\n      };\n\n    case actionTypes.FETCH_WEATHER_FAILURE:\n      return { ...state,\n        error: action.payload,\n        loading: false\n      };\n\n    case actionTypes.FETCH_WEATHER_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case actionTypes.FETCH_WEATHER_SUCCESS:\n      return {\n        response_amount: action.payload.response_amount,\n        to: action.payload.to,\n        from: action.payload.from\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"names":["actionTypes","InitialState","request_amount","from","to","response_amount","error","loading","reducer","state","action","type","CONVERT","payload","FETCH_WEATHER_FAILURE","FETCH_WEATHER_REQUEST","FETCH_WEATHER_SUCCESS"],"sources":["/home/domirando/Projects/job-tasks/currency-converter/src/state/reducers/convertReducer.ts"],"sourcesContent":["import {actionTypes} from \"../action-types\";\nimport {Actions} from \"../actions\";\n\nexport type InitialStateType = {\n    request_amount?: number,\n    from?: string,\n    to?: string,\n    response_amount?: number,\n    error?: string,\n    loading?: boolean\n}\nexport let InitialState: InitialStateType = {\n    request_amount: 0,\n    from: \"rub\",\n    to: \"usd\",\n    response_amount: 0,\n    error: \"\",\n    loading: false\n}\nconst reducer = (state: InitialStateType = InitialState, action: Actions) => {\n    switch (action.type) {\n        case actionTypes.CONVERT:\n            return {\n                request_amount: action.payload.request_amount,\n                to: action.payload.to,\n                from: action.payload.from,\n                response_amount: action.payload.response_amount\n            }\n        case actionTypes.FETCH_WEATHER_FAILURE:\n            return {\n                ...state,\n                error: action.payload,\n                loading: false\n            }\n        case actionTypes.FETCH_WEATHER_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case actionTypes.FETCH_WEATHER_SUCCESS:\n            return {\n                response_amount: action.payload.response_amount,\n                to: action.payload.to,\n                from: action.payload.from,\n            }\n        default:\n            return state\n    }\n}\n\nexport default reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,iBAA1B;AAWA,OAAO,IAAIC,YAA8B,GAAG;EACxCC,cAAc,EAAE,CADwB;EAExCC,IAAI,EAAE,KAFkC;EAGxCC,EAAE,EAAE,KAHoC;EAIxCC,eAAe,EAAE,CAJuB;EAKxCC,KAAK,EAAE,EALiC;EAMxCC,OAAO,EAAE;AAN+B,CAArC;;AAQP,MAAMC,OAAO,GAAG,YAA6D;EAAA,IAA5DC,KAA4D,uEAAlCR,YAAkC;EAAA,IAApBS,MAAoB;;EACzE,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKX,WAAW,CAACY,OAAjB;MACI,OAAO;QACHV,cAAc,EAAEQ,MAAM,CAACG,OAAP,CAAeX,cAD5B;QAEHE,EAAE,EAAEM,MAAM,CAACG,OAAP,CAAeT,EAFhB;QAGHD,IAAI,EAAEO,MAAM,CAACG,OAAP,CAAeV,IAHlB;QAIHE,eAAe,EAAEK,MAAM,CAACG,OAAP,CAAeR;MAJ7B,CAAP;;IAMJ,KAAKL,WAAW,CAACc,qBAAjB;MACI,OAAO,EACH,GAAGL,KADA;QAEHH,KAAK,EAAEI,MAAM,CAACG,OAFX;QAGHN,OAAO,EAAE;MAHN,CAAP;;IAKJ,KAAKP,WAAW,CAACe,qBAAjB;MACI,OAAO,EACH,GAAGN,KADA;QAEHF,OAAO,EAAE;MAFN,CAAP;;IAIJ,KAAKP,WAAW,CAACgB,qBAAjB;MACI,OAAO;QACHX,eAAe,EAAEK,MAAM,CAACG,OAAP,CAAeR,eAD7B;QAEHD,EAAE,EAAEM,MAAM,CAACG,OAAP,CAAeT,EAFhB;QAGHD,IAAI,EAAEO,MAAM,CAACG,OAAP,CAAeV;MAHlB,CAAP;;IAKJ;MACI,OAAOM,KAAP;EA1BR;AA4BH,CA7BD;;AA+BA,eAAeD,OAAf"},"metadata":{},"sourceType":"module"}