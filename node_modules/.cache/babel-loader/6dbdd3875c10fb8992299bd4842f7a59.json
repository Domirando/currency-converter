{"ast":null,"code":"import { actionTypes } from \"../action-types\";\nimport axios from \"axios\";\nexport const ConvertMoney = (amount, from, to) => {\n  return {\n    type: actionTypes.CONVERT,\n    payload: {\n      request_amount: amount,\n      from: from,\n      to: to,\n      response_amount: 0\n    }\n  };\n};\n_c = ConvertMoney;\nexport const fetchData = (amount, from, to) => {\n  const API_KEY = 'FWcJsFtVZIgaioJaaTsmxsiGH2i53NOvy5boCoNc';\n  return async dispatch => {\n    try {\n      dispatch({\n        type: actionTypes.FETCH_WEATHER_REQUEST\n      });\n      let response;\n\n      if (amount && from && to) {\n        // @ts-ignore\n        response = await axios.get(\"https://api.currencyapi.com/v3/convert\");\n        console.log(response.data);\n      } else {\n        response = await axios.get(`https://api.currencyapi.com/v3/latest?apikey=${API_KEY}`);\n        console.log(\"response:\", response.data);\n        let items = Object.entries(response.data.data).map(item => item);\n        let items2 = items.map(item => item);\n        let to = items2.map(item => item[1]);\n        console.log(\"to\", items[0].code);\n        dispatch({\n          type: actionTypes.FETCH_WEATHER_SUCCESS,\n          payload: {\n            from: 'usd',\n            to: to // response_amount: amount\n\n          }\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: actionTypes.FETCH_WEATHER_FAILURE,\n        payload: \"ooops, something went wrong!\"\n      });\n    }\n  };\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ConvertMoney\");","map":{"version":3,"names":["actionTypes","axios","ConvertMoney","amount","from","to","type","CONVERT","payload","request_amount","response_amount","fetchData","API_KEY","dispatch","FETCH_WEATHER_REQUEST","response","get","console","log","data","items","Object","entries","map","item","items2","code","FETCH_WEATHER_SUCCESS","error","FETCH_WEATHER_FAILURE"],"sources":["/home/domirando/Projects/job-tasks/currency-converter/src/state/action-creators/index.ts"],"sourcesContent":["import {actionTypes} from \"../action-types\";\nimport axios from \"axios\";\nimport {Actions} from \"../actions\";\nimport {Dispatch} from \"react\";\nimport {log} from \"util\";\nimport {keyboard} from \"@testing-library/user-event/dist/keyboard\";\n\nexport const ConvertMoney = (amount: number, from: string, to: string) => {\n    return {\n        type: actionTypes.CONVERT,\n        payload: {\n            request_amount: amount,\n            from: from,\n            to: to,\n            response_amount: 0,\n        }\n    }\n}\n\nexport const fetchData = (amount?: number, from?: string, to?: string) => {\n    const API_KEY = 'FWcJsFtVZIgaioJaaTsmxsiGH2i53NOvy5boCoNc'\n    return async (dispatch: Dispatch<Actions>) => {\n        try {\n            dispatch({type: actionTypes.FETCH_WEATHER_REQUEST})\n            let response: any;\n            if (amount && from && to) {\n                // @ts-ignore\n                response = await axios.get(\"https://api.currencyapi.com/v3/convert\")\n                console.log(response.data)\n            }else {\n                response = await axios.get(`https://api.currencyapi.com/v3/latest?apikey=${API_KEY}`)\n                console.log(\"response:\", response.data)\n                let items = Object.entries(response.data.data).map(item => item)\n                let items2 = items.map(item => item)\n                let to = items2.map(item => item[1])\n                console.log(\"to\", items[0].code)\n                dispatch({type: actionTypes.FETCH_WEATHER_SUCCESS, payload: {\n                        from: 'usd',\n                        to: to,\n                        // response_amount: amount\n                    }})\n            }\n        } catch (error) {\n            dispatch({type: actionTypes.FETCH_WEATHER_FAILURE, payload: \"ooops, something went wrong!\"})\n        }\n    }\n}"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAMA,OAAO,MAAMC,YAAY,GAAG,CAACC,MAAD,EAAiBC,IAAjB,EAA+BC,EAA/B,KAA8C;EACtE,OAAO;IACHC,IAAI,EAAEN,WAAW,CAACO,OADf;IAEHC,OAAO,EAAE;MACLC,cAAc,EAAEN,MADX;MAELC,IAAI,EAAEA,IAFD;MAGLC,EAAE,EAAEA,EAHC;MAILK,eAAe,EAAE;IAJZ;EAFN,CAAP;AASH,CAVM;KAAMR,Y;AAYb,OAAO,MAAMS,SAAS,GAAG,CAACR,MAAD,EAAkBC,IAAlB,EAAiCC,EAAjC,KAAiD;EACtE,MAAMO,OAAO,GAAG,0CAAhB;EACA,OAAO,MAAOC,QAAP,IAAuC;IAC1C,IAAI;MACAA,QAAQ,CAAC;QAACP,IAAI,EAAEN,WAAW,CAACc;MAAnB,CAAD,CAAR;MACA,IAAIC,QAAJ;;MACA,IAAIZ,MAAM,IAAIC,IAAV,IAAkBC,EAAtB,EAA0B;QACtB;QACAU,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAU,wCAAV,CAAjB;QACAC,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB;MACH,CAJD,MAIM;QACFJ,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAW,gDAA+CJ,OAAQ,EAAlE,CAAjB;QACAK,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,QAAQ,CAACI,IAAlC;QACA,IAAIC,KAAK,GAAGC,MAAM,CAACC,OAAP,CAAeP,QAAQ,CAACI,IAAT,CAAcA,IAA7B,EAAmCI,GAAnC,CAAuCC,IAAI,IAAIA,IAA/C,CAAZ;QACA,IAAIC,MAAM,GAAGL,KAAK,CAACG,GAAN,CAAUC,IAAI,IAAIA,IAAlB,CAAb;QACA,IAAInB,EAAE,GAAGoB,MAAM,CAACF,GAAP,CAAWC,IAAI,IAAIA,IAAI,CAAC,CAAD,CAAvB,CAAT;QACAP,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBE,KAAK,CAAC,CAAD,CAAL,CAASM,IAA3B;QACAb,QAAQ,CAAC;UAACP,IAAI,EAAEN,WAAW,CAAC2B,qBAAnB;UAA0CnB,OAAO,EAAE;YACpDJ,IAAI,EAAE,KAD8C;YAEpDC,EAAE,EAAEA,EAFgD,CAGpD;;UAHoD;QAAnD,CAAD,CAAR;MAKH;IACJ,CApBD,CAoBE,OAAOuB,KAAP,EAAc;MACZf,QAAQ,CAAC;QAACP,IAAI,EAAEN,WAAW,CAAC6B,qBAAnB;QAA0CrB,OAAO,EAAE;MAAnD,CAAD,CAAR;IACH;EACJ,CAxBD;AAyBH,CA3BM"},"metadata":{},"sourceType":"module"}