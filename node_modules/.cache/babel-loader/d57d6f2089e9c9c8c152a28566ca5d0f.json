{"ast":null,"code":"import { actionTypes } from \"../action-types\";\nimport axios from \"axios\";\nconst API_KEY = 'E2moV4qG3M1ZMoVIlPp1JXHmyWHqtoYm';\nexport const ConvertMoney = (amount, from, to) => {\n  return {\n    type: actionTypes.CONVERT,\n    payload: {\n      request_amount: amount,\n      from: from,\n      to: to,\n      response_amount: 0\n    }\n  };\n};\n_c = ConvertMoney;\nexport const fetchData = (amount, from, to) => {\n  let myHeaders = new Headers();\n  myHeaders.append(\"apikey\", \"TGUgkNJS3csWfWUtznK7Yjtw6QaMaYnY\");\n  let requestOptions = {\n    method: 'GET',\n    redirect: 'follow',\n    headers: myHeaders\n  };\n  return async dispatch => {\n    try {\n      dispatch({\n        type: actionTypes.FETCH_WEATHER_REQUEST\n      });\n      let response;\n\n      if (amount && from && to) {\n        // @ts-ignore\n        response = await axios.get(\"https://api.apilayer.com/fixer/convert?to=usd&from=rub&amount=12000\", requestOptions);\n        console.log(response.data);\n      } else {\n        response = await axios.get(`https://data.fixer.io/api/latest?access_key=${API_KEY}`);\n        console.log(\"response:\", response.data);\n        dispatch({\n          type: actionTypes.FETCH_WEATHER_SUCCESS,\n          payload: response.data\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: actionTypes.FETCH_WEATHER_FAILURE,\n        payload: \"ooops, something went wrong!\"\n      });\n    }\n  };\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ConvertMoney\");","map":{"version":3,"names":["actionTypes","axios","API_KEY","ConvertMoney","amount","from","to","type","CONVERT","payload","request_amount","response_amount","fetchData","myHeaders","Headers","append","requestOptions","method","redirect","headers","dispatch","FETCH_WEATHER_REQUEST","response","get","console","log","data","FETCH_WEATHER_SUCCESS","error","FETCH_WEATHER_FAILURE"],"sources":["/home/domirando/Projects/job-tasks/currency-converter/src/state/action-creators/index.ts"],"sourcesContent":["import {actionTypes} from \"../action-types\";\nimport axios from \"axios\";\nimport {Actions} from \"../actions\";\nimport {Dispatch} from \"react\";\n\n\nconst API_KEY = 'E2moV4qG3M1ZMoVIlPp1JXHmyWHqtoYm'\n\nexport const ConvertMoney = (amount: number, from: string, to: string) => {\n    return {\n        type: actionTypes.CONVERT,\n        payload: {\n            request_amount: amount,\n            from: from,\n            to: to,\n            response_amount: 0,\n        }\n    }\n}\n\n\nexport const fetchData = (amount?: number, from?: string, to?: string) => {\n    let myHeaders = new Headers();\n    myHeaders.append(\"apikey\", \"TGUgkNJS3csWfWUtznK7Yjtw6QaMaYnY\");\n\n    let requestOptions = {\n        method: 'GET',\n        redirect: 'follow',\n        headers: myHeaders\n    };\n    return async (dispatch: Dispatch<Actions>) => {\n        try {\n            dispatch({type: actionTypes.FETCH_WEATHER_REQUEST})\n            let response: any;\n            if (amount && from && to) {\n                // @ts-ignore\n                response = await axios.get(\"https://api.apilayer.com/fixer/convert?to=usd&from=rub&amount=12000\", requestOptions)\n                console.log(response.data)\n            }else {\n                response = await axios.get(`https://data.fixer.io/api/latest?access_key=${API_KEY}`)\n                console.log(\"response:\", response.data)\n                dispatch({type: actionTypes.FETCH_WEATHER_SUCCESS, payload: response.data})\n            }\n        } catch (error) {\n            dispatch({type: actionTypes.FETCH_WEATHER_FAILURE, payload: \"ooops, something went wrong!\"})\n        }\n    }\n}"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAKA,MAAMC,OAAO,GAAG,kCAAhB;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,MAAD,EAAiBC,IAAjB,EAA+BC,EAA/B,KAA8C;EACtE,OAAO;IACHC,IAAI,EAAEP,WAAW,CAACQ,OADf;IAEHC,OAAO,EAAE;MACLC,cAAc,EAAEN,MADX;MAELC,IAAI,EAAEA,IAFD;MAGLC,EAAE,EAAEA,EAHC;MAILK,eAAe,EAAE;IAJZ;EAFN,CAAP;AASH,CAVM;KAAMR,Y;AAab,OAAO,MAAMS,SAAS,GAAG,CAACR,MAAD,EAAkBC,IAAlB,EAAiCC,EAAjC,KAAiD;EACtE,IAAIO,SAAS,GAAG,IAAIC,OAAJ,EAAhB;EACAD,SAAS,CAACE,MAAV,CAAiB,QAAjB,EAA2B,kCAA3B;EAEA,IAAIC,cAAc,GAAG;IACjBC,MAAM,EAAE,KADS;IAEjBC,QAAQ,EAAE,QAFO;IAGjBC,OAAO,EAAEN;EAHQ,CAArB;EAKA,OAAO,MAAOO,QAAP,IAAuC;IAC1C,IAAI;MACAA,QAAQ,CAAC;QAACb,IAAI,EAAEP,WAAW,CAACqB;MAAnB,CAAD,CAAR;MACA,IAAIC,QAAJ;;MACA,IAAIlB,MAAM,IAAIC,IAAV,IAAkBC,EAAtB,EAA0B;QACtB;QACAgB,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAN,CAAU,qEAAV,EAAiFP,cAAjF,CAAjB;QACAQ,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB;MACH,CAJD,MAIM;QACFJ,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAN,CAAW,+CAA8CrB,OAAQ,EAAjE,CAAjB;QACAsB,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,QAAQ,CAACI,IAAlC;QACAN,QAAQ,CAAC;UAACb,IAAI,EAAEP,WAAW,CAAC2B,qBAAnB;UAA0ClB,OAAO,EAAEa,QAAQ,CAACI;QAA5D,CAAD,CAAR;MACH;IACJ,CAZD,CAYE,OAAOE,KAAP,EAAc;MACZR,QAAQ,CAAC;QAACb,IAAI,EAAEP,WAAW,CAAC6B,qBAAnB;QAA0CpB,OAAO,EAAE;MAAnD,CAAD,CAAR;IACH;EACJ,CAhBD;AAiBH,CA1BM"},"metadata":{},"sourceType":"module"}